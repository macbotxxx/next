# Generated by Django 3.1.13 on 2021-10-31 01:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('store', '0010_product_product_sku'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='The unique identifier of an object.', primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Timestamp when the record was created.', max_length=20, verbose_name='Created Date')),
                ('modified_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Modified date when the record was created.', max_length=20, verbose_name='Modified Date')),
                ('order_number', models.CharField(help_text='Order generated number to identify the current customer order', max_length=150, null=True, verbose_name='Order Number')),
                ('first_name', models.CharField(help_text='Customer legal first name', max_length=150, null=True, verbose_name='Legal First Name')),
                ('last_name', models.CharField(help_text='Customer legal last name', max_length=150, null=True, verbose_name='Legal Last Name ')),
                ('phone_number', models.CharField(help_text='Customers Phone Number', max_length=150, null=True, verbose_name='Phone Number ')),
                ('email', models.EmailField(help_text='Customer email address for discount and notifications', max_length=150, null=True, verbose_name='Customers Email')),
                ('address_line_1', models.CharField(help_text='Customers address line 1 ', max_length=400, null=True, verbose_name='Address Line 1')),
                ('address_line_2', models.CharField(help_text='Customers address line 2 ', max_length=400, null=True, verbose_name='Address Line 2')),
                ('state', models.CharField(help_text='State of which the order is been placed from or to be shipped to.', max_length=400, null=True, verbose_name='Customers State')),
                ('order_note', models.TextField(help_text='A short note for the order to be delieved to you.', null=True, verbose_name='Order Note')),
                ('order_total', models.IntegerField(blank=True, help_text='Total amount for the current order placed by the customer', null=True, verbose_name='Order Total Amount')),
                ('tax', models.IntegerField(blank=True, help_text='Tax amount for the current order placed by the customer', null=True, verbose_name='Order Tax Amount')),
                ('status', models.CharField(choices=[('New', 'New'), ('Accepted', 'Accepted'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled')], default='New', help_text='the current status of the order.', max_length=400, null=True, verbose_name='Order Status')),
                ('ip_address', models.GenericIPAddressField(help_text='user default IP address hold the original ip address after registration, which a notification email will be sent to the user when a new ip address is been login to the account, and this is done for security reasons.', null=True, verbose_name='User Default IP Address')),
                ('is_ordered', models.BooleanField(blank=True, default=False, help_text='the current state of the order , which identifies if the order is been processed successfully or not.', null=True, verbose_name='Order Operation')),
            ],
            options={
                'verbose_name': 'All Order',
                'verbose_name_plural': 'All Order',
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='Payement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='The unique identifier of an object.', primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Timestamp when the record was created.', max_length=20, verbose_name='Created Date')),
                ('modified_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Modified date when the record was created.', max_length=20, verbose_name='Modified Date')),
                ('payment_id', models.CharField(help_text='The payment identification number sent from the payment gateway.', max_length=150, null=True, verbose_name='Payment ID')),
                ('payment_method', models.CharField(help_text='The payment method used while paying for an order.', max_length=150, null=True, verbose_name='Payment Method')),
                ('amount_paid', models.CharField(help_text='Amount paid for the above order by the customer.', max_length=150, null=True, verbose_name='Amount Paid')),
                ('status', models.CharField(help_text='Payment status which identifies if the payment is set or not.', max_length=150, null=True, verbose_name='Payment Status')),
                ('user', models.ForeignKey(help_text='The user for whom account belongs to', null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User Profile')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payment',
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='The unique identifier of an object.', primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Timestamp when the record was created.', max_length=20, verbose_name='Created Date')),
                ('modified_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Modified date when the record was created.', max_length=20, verbose_name='Modified Date')),
                ('color', models.CharField(help_text='product color for the current product variation.', max_length=400, null=True, verbose_name='Product Color')),
                ('size', models.CharField(help_text='product size for the current product variation.', max_length=400, null=True, verbose_name='Product Size')),
                ('quantity', models.IntegerField(blank=True, help_text='product quantity for the current product been order by the customer.', null=True, verbose_name='Product Quantity')),
                ('product_price', models.IntegerField(blank=True, help_text='price for the current product.', null=True, verbose_name='Product Price ')),
                ('ordered', models.BooleanField(blank=True, default=False, help_text='the current state of the order , which identifies if the order is been processed successfully or not.', null=True, verbose_name='Order Operation')),
                ('order', models.ForeignKey(blank=True, help_text='foreign key and session to the order table.', null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.order')),
                ('payment', models.ForeignKey(blank=True, help_text='foreign key and session to the payment table.', null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.payement')),
                ('product', models.ForeignKey(blank=True, help_text='foreign key and session to the product table.', null=True, on_delete=django.db.models.deletion.CASCADE, to='store.product')),
                ('user', models.ForeignKey(help_text='The user for whom account belongs to', null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User Profile')),
                ('variation', models.ForeignKey(blank=True, help_text='foreign key and session to the product variation table.', null=True, on_delete=django.db.models.deletion.CASCADE, to='store.productvariation')),
            ],
            options={
                'verbose_name': 'All Ordered Products',
                'verbose_name_plural': 'All Ordered Products',
                'ordering': ('-created_date',),
            },
        ),
        migrations.AddField(
            model_name='order',
            name='payment',
            field=models.ForeignKey(blank=True, help_text='Customers order payment information.', null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.payement'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(help_text='The user for whom account belongs to', null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User Profile'),
        ),
    ]
